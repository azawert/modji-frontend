openapi: '3.0.1'
info:
  title: 'Modgy: Owners Specification'
  description: Modgy owners
  version: 'v6'

servers:
    - url: http://localhost:8080
      description: Local server for develop
    - url: http://212.109.192.9:8080
      description: backend server для тестирования кода и работы фронтэнда
        По вопросам работы сервера обращаться к Руслану
    - url: https://212.109.192.9:443
      description: Удалённый backend сервер для тестирования и работы frontend.
        По вопросам работы сервера обращаться к Руслану
paths:
  /owners:
    post:
      tags:
        - owner-controller
      summary: Добавление нового клиента (собственника зверушки)
      description: Добавление нового клиента может осуществляться только пользователями с ролью ROLE_BOSS или
        ROLE_ADMIN.
      operationId: addOwner
      parameters:
        - $ref: '#/components/parameters/requesterHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOwnerDto'
      responses:
        201:
          description: Created - клиент создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerDto'
        400:
          description: Запрос составлен неверно.
          content:
            application/json:
              example:
                errors: []
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: "Error: Field mainPhone must not be blank."
                timestamp: 2023-12-03 09:10:50
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Недостаточно прав для совершения действия.
          content:
            application/json:
              example:
                errors: []
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Объект не найден.
          content:
            application/json:
              example:
                errors: []
                status: NOT_FOUND
                reason: The required object was not found.
                message: "User with id=5 is not found"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Ошибка уникальности полей базы данных.
          content:
            application/json:
              example:
                errors: []
                status: CONFLICT
                reason: integrity constraint has been violated.
                message: "Attempt to insert duplicate key row in object owner with unique index owner_main_phone."
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              example:
                errors: []
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error.
                message: []
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - owner-controller
      summary: Получение списка всех клиентов
      description: Получение списка всех клиентов может осуществляться только пользователями с ролью ROLE_BOSS
        или ROLE_ADMIN.
      operationId: getAllOwners
      parameters:
        - $ref: '#/components/parameters/requesterHeader'

      responses:
        200:
          description: OK,
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OwnerDto"
        400:
          description: Запрос составлен неверно.
          content:
            application/json:
              example:
                errors: []
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: ""
                timestamp: 2023-12-03 09:10:50
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Недостаточно прав для совершения действия.
          content:
            application/json:
              example:
                errors: []
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Объект не найден.
          content:
            application/json:
              example:
                errors: []
                status: NOT_FOUND
                reason: The required object was not found.
                message: "Owner with id=42 is not found"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              example:
                errors: []
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error.
                message: []
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'

  /owners/{id}:
    get:
      tags:
        - owner-controller
      summary: Получение клиента по id
      description: >-
        Получение клиента по id может осуществляться только пользователями с ролью ROLE_BOSS или ROLE_ADMIN.
      operationId: getOwnerById
      parameters:
        - $ref: '#/components/parameters/requesterHeader'
        - $ref: '#/components/parameters/ownerId'
      responses:
        200:
          description: OK,
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerDto"
        400:
          description: Запрос составлен неверно.
          content:
            application/json:
              example:
                errors: []
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: ""
                timestamp: 2023-12-03 09:10:50
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Недостаточно прав для совершения действия.
          content:
            application/json:
              example:
                errors: []
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Объект не найден.
          content:
            application/json:
              example:
                errors: []
                status: NOT_FOUND
                reason: The required object was not found.
                message: "Owner with id=42 is not found"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              example:
                errors: []
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error.
                message: []
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
          - owner-controller
      summary: Удаление клиента по id
      description: >-
        Удаление клиента по id может осуществляться только пользователями с ролью ROLE_BOSS.
      operationId: deleteOwnerById
      parameters:
          - $ref: '#/components/parameters/requesterHeader'
          - $ref: '#/components/parameters/ownerId'
      responses:
        204:
          description: NO_CONTENT

        400:
          description: Запрос составлен неверно.
          content:
            application/json:
              example:
                errors: []
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: ""
                timestamp: 2023-12-03 09:10:50
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Недостаточно прав для совершения действия.
          content:
            application/json:
              example:
                errors: []
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Объект не найден.
          content:
            application/json:
              example:
                errors: []
                status: NOT_FOUND
                reason: The required object was not found.
                message: "Owner with id=42 is not found"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              example:
                errors: []
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error.
                message: []
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
          - owner-controller
      summary: Изменить данные клиента
      operationId: updateOwner
      description: >-
        Изменение данных клиента может осуществляться только пользователями с ролью ROLE_BOSS или ROLE_ADMIN.
      parameters:
          - $ref: '#/components/parameters/requesterHeader'
          - $ref: '#/components/parameters/ownerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOwnerDto'
      responses:
        200:
          description: OK,
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerDto"
        400:
          description: Запрос составлен неверно.
          content:
            application/json:
              example:
                errors: []
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: ""
                timestamp: 2023-12-03 09:10:50
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Недостаточно прав для совершения действия.
          content:
            application/json:
              example:
                errors: []
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Объект не найден.
          content:
            application/json:
              example:
                errors: []
                status: NOT_FOUND
                reason: The required object was not found.
                message: "Owner with id=42 is not found"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Ошибка уникальности полей базы данных.
          content:
            application/json:
              example:
                errors: []
                status: CONFLICT
                reason: integrity constraint has been violated.
                message: "Attempt to insert duplicate key row in object owner with unique index owner_main_phone."
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Объект не найден.
          content:
            application/json:
              example:
                errors: []
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error.
                message: []
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
  /owners/short:
    get:
      tags:
        - owner-controller
      summary: Получение краткой информации о последних num зарегистрированных клиентах
      description: >-
        Получение информации может осуществляться только пользователями с ролью ROLE_BOSS или ROLE_ADMIN.
      operationId: getSomeShortOwners
      parameters:
        - $ref: '#/components/parameters/requesterHeader'
        - name: num
          in: query
          description: число запрашиваемых клиентов
          required: false
          schema:
            type: integer
            format: int64
            default: 10
      responses:
        200:
          description: OK,
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OwnerShortDto"
        403:
          description: Недостаточно прав для совершения действия.
          content:
            application/json:
              example:
                errors: []
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              example:
                errors: []
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error.
                message: []
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'

  /owners/short/{id}:
    get:
      tags:
        - owner-controller
      summary: Получение по id краткой информации о клиенте
      description: >-
        Получение информации может осуществляться только пользователями с ролью ROLE_BOSS или ROLE_ADMIN.
      operationId: getShortOwnerById
      parameters:
        - $ref: '#/components/parameters/requesterHeader'
        - $ref: '#/components/parameters/ownerId'
      responses:
        200:
          description: OK,
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerShortDto"
        403:
          description: Недостаточно прав для совершения действия.
          content:
            application/json:
              example:
                errors: []
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Объект не найден.
          content:
            application/json:
              example:
                errors: []
                status: NOT_FOUND
                reason: The required object was not found.
                message: "Owner with id=42 is not found"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              example:
                errors: []
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error.
                message: []
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'

  /owners/check:
    post:
      tags:
        - owner-controller
      summary: Проверка наличия в базе клиента с указанным номером телефона
      description: >-
        Проверка может осуществляться только пользователями с ролью ROLE_BOSS или ROLE_ADMIN.
      operationId: checkOwnerPhoneNumber
      parameters:
        - $ref: '#/components/parameters/requesterHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckOwnerDto'
      responses:
        200:
          description: OK,
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerDto"
        400:
          description: Запрос составлен неверно.
          content:
            application/json:
              example:
                errors: []
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: ""
                timestamp: 2023-12-03 09:10:50
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Недостаточно прав для совершения действия.
          content:
            application/json:
              example:
                errors: []
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=FINANCIAL, can't access for this action"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              example:
                errors: []
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error.
                message: [ ]
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'



  /owners/search:
    post:
      tags:
        - owner-controller
      summary: Поиск клиента по ФИО или номеру телефонов
      description: >-
        Поиск может осуществляться только пользователями с ролью ROLE_BOSS или ROLE_ADMIN.
      operationId: searchOwner
      parameters:
        - $ref: '#/components/parameters/requesterHeader'
        - name: direction
          in: query
          description: направление поиска
          required: false
          schema:
            type: string
            enum: ["name", "phone"]
            default: "name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchOwnerDto'
      responses:
        200:
          description: OK,
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnerDto"
        400:
          description: Запрос составлен неверно.
          content:
            application/json:
              example:
                errors: []
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: ""
                timestamp: 2023-12-03 09:10:50
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Недостаточно прав для совершения действия.
          content:
            application/json:
              example:
                errors: []
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=FINANCIAL, can't access for this action"
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              example:
                errors: []
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error.
                message: [ ]
                timestamp: 2023-12-03 09:10:55
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    requesterHeader:
      name: X-PetHotel-User-Id
      description: Id пользователя осуществляющего запрос
      in: header
      required: true
      schema:
        type: integer
        format: int64
        example: 1
    ownerId:
      name: id
      in: path
      description: ID клиента в отношении которого совершается действие
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    NewOwnerDto:
      title: NewOwnerDto
      type: object
      required:
        - firstName
        - mainPhone
      properties:
        lastName:
          description: Фамилия клиента
          type: string
          maxLength: 30
          minLength: 2
          example: Сумкин
        firstName:
          description: Имя клиента
          type: string
          maxLength: 15
          minLength: 2
          example: Фёдор
        middleName:
          description: Отчество клиента
          type: string
          maxLength: 15
          minLength: 2
          example: Святославович
        mainPhone:
          description: Основной номер телефона клиента
          type: string
          pattern: ^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
          uniqueItems: true
          example: "+79123456789"
        optionalPhone:
          description: Дополнительный номер телефона клиента
          type: string
          pattern: ^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
          uniqueItems: true
          example: "+71234567890"
        otherContacts:
          description: Прочие контакты клиента
          type: string
          maxLength: 500
          example: 'VK: FSumkin, TG: @Fumkin'
        actualAddress:
          description: Фактический адрес клиента
          type: string
          maxLength: 150
          example: г.Омск, ул.Омуля д.15, кв.32
        trustedMan:
          description: Доверенное лицо клиента
          type: string
          maxLength: 150
          example: Гендальф, +79217775533
        comment:
          description: Заметки о клиенте
          type: string
          example: Старый пират, друг Флинта. Жаден. Ради денег готов на всё. Характер мерзкий. Не женат.
        source:
          description: Откуда узнали о гостинице
          type: string
          maxLength: 100
          example: Рассказали друзья
        rating:
          description: Рейтинг клиента
          type: integer
          format: int32
          maximum: 10
          minimum: 0
          default: 0
          example: 3

    CheckOwnerDto:
      title: CheckOwnerDto
      type: object
      required:
        - phone
      properties:
        phone:
          description: Номер телефона клиента для проверки
          type: string
          pattern: ^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
          uniqueItems: true
          example: "+79123456789"

    SearchOwnerDto:
      title: SearchOwnerDto
      type: object
      required:
      properties:
        wanted:
          description: Искомое значение
          type: string
          example: "9123456789"

    OwnerDto:
      title: OwnerDto
      type: object
      properties:
        id:
          description: Id клиента
          type: integer
          format: int64
          example: 103
        lastName:
          description: Фамилия клиента
          type: string
          example: Сумкин
        firstName:
          description: Имя клиента
          type: string
          example: Фёдор
        middleName:
          description: Отчество клиента
          type: string
          example: Святославович
        mainPhone:
          description: Основной номер телефона клиента
          type: string
          example: "+79123456789"
        optionalPhone:
          description: Дополнительный номер телефона клиента
          type: string
          example: "+71234567890"
        otherContacts:
          description: Прочие контакты клиента
          type: string
          example: VK - FSumkin, TG - @Fumkin
        actualAddress:
          description: Фактический адрес клиента
          type: string
          example: г. Омск, ул. Омуля д.15, кв.32
        trustedMan:
          description: Доверенное лицо клиента
          type: string
          example: Гендальф, +79217775533
        comment:
          description: Заметки о клиенте
          type: string
          example: Очень, очень хороший мальчик. Вежлив, правдив, скромен, добр. Слушает маму,
            каждое утро делает зарядку. Характер очень мягкий.
        source:
          description: Откуда узнали о гостинице
          type: string
          example: Рассказали друзья
        rating:
          description: Рейтинг клиента
          type: integer
          format: int32
          example: 1
        registrationDate:
          description: Дата регистрации клиента
          type: string
          format: date-time
          example: 23.12.2023 12:00
        petsDto:
          description: Список питомцев клиента
          type: array
          items:
            $ref: "#/components/schemas/PetDtoForOwner"

    UpdateOwnerDto:
      title: UpdateOwnerDto
      description: DTO для обновления данных клиента
      type: object
      properties:
        lastName:
          description: Фамилия клиента
          type: string
          maxLength: 20
          minLength: 2
          example: Пинкман
        firstName:
          description: Имя клиента
          type: string
          maxLength: 15
          minLength: 2
          example: Джесси
        middleName:
          description: Отчество клиента
          type: string
          maxLength: 15
          minLength: 2
          example: Альбукеркиевич
        mainPhone:
          description: Основной номер телефона клиента
          type: string
          pattern: ^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
          uniqueItems: true
          example: "+7(505)1483369"
        optionalPhone:
          description: Дополнительный номер телефона клиента
          type: string
          pattern: ^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
          uniqueItems: true
          example: "+71234567890"
        otherContacts:
          description: Прочие контакты клиента
          type: string
          maxLength: 500
          example: 'VK: FSumkin, TG: @Fumkin'
        actualAddress:
          description: Фактический адрес клиента
          type: string
          maxLength: 150
          example: г.Омск, ул.Омуля д.15, кв.32
        trustedMan:
          description: Доверенное лицо клиента
          type: string
          maxLength: 150
          example: Гендальф, +79217775533
        comment:
          description: Заметки о клиенте
          type: string
          example: Старый пират, друг Флинта. Жаден. Ради денег готов на всё. Характер мерзкий. Не женат.
        source:
          description: Откуда узнали о гостинице
          type: string
          maxLength: 100
          example: Рассказали друзья
        rating:
          description: Рейтинг клиента
          type: integer
          format: int32
          maximum: 10
          minimum: 0
          default: 0
          example: 2

    OwnerShortDto:
      title: OwnerShortDto
      type: object
      properties:
        lastName:
          description: Фамилия клиента
          type: string
          example: Сумкин
        firstName:
          description: Имя клиента
          type: string
          example: Фёдор
        middleName:
          description: Отчество клиента
          type: string
          example: Святославович
        mainPhone:
          description: Основной номер телефона клиента
          type: string
          example: "+79123456789"
        optionalPhone:
          description: Дополнительный номер телефона клиента
          type: string
          example: "+71234567890"
        registrationDate:
          description: Дата регистрации клиента
          type: string
          format: date-time
          example: 23.12.2023 12:00

    PetDtoForOwner:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: id питомца
          example: 1
        type:
          type: string
          enum:
            - DOG
            - CAT
            - EXOTIC
          description: Тип животного
          example: DOG
        name:
          maxLength: 30
          minLength: 1
          type: string
          description: Кличка питомца
          example: Барбос
        breed:
          maxLength: 30
          minLength: 1
          type: string
          description: Порода питомца
          example: Спаниель
        birthDate:
          type: string
          description: Дата рождения (в формате "dd.MM.yyyy"), должна быть в прошлом
          example: 09.06.2023
        sex:
          type: string
          enum:
            - FEMALE
            - MALE
            - HERMAPHRODITE
          description: Пол питомца
          example: FEMALE
        color:
          maxLength: 30
          type: string
          description: Окрас питомца
          example: Черный
        sign:
          maxLength: 150
          type: string
          description: Чип, Клеймо, Особые приметы
          example: Клеймо
        isExhibition:
          type: boolean
          description: Выставочная ли собака?
          example: true
        vetVisitDate:
          type: string
          description: >-
            Дата последнего посещения ветврача (в формате "dd.MM.yyyy"), должна
            быть в прошлом
          example: 09.06.2023
        vetVisitReason:
          maxLength: 250
          type: string
          description: Причина последнего посещения врача
          example: Ушиб лапы
        vaccine:
          maxLength: 250
          type: string
          description: Даты последних прививок, названия вакцин
          example: 1.11.2023 антиклещ
        parasites:
          maxLength: 250
          type: string
          description: Дата обработки от глистов/паразитов
          example: 22.11.2023
        fleaMite:
          maxLength: 250
          type: string
          description: Даты обработки от блох/клещей с указанием препарата
          example: 22.11.2023 антиклещ
        surgery:
          maxLength: 250
          type: string
          description: Перенесенные операции (кастрация)
          example: Кастрация
        pastDisease:
          maxLength: 500
          type: string
          description: Перенесенные заболевания
          example: пиелонефрит
        healthCharacteristic:
          maxLength: 500
          type: string
          description: Особенности состояния здоровья питомца (ФИП)
          example: без особенностей
        urineAnalysis:
          maxLength: 250
          type: string
          description: Дата последней сдачи мочи
          example: 1.11.2023
        allergy:
          type: boolean
          description: Есть ли аллергия?
          example: true
        allergyType:
          maxLength: 250
          type: string
          description: >-
            Если предыдущее поле true, тогда в этом поле описание на что
            аллергия
          example: На молоко
        chronicDisease:
          type: boolean
          description: Есть ли у питомца хронические заболевания?
          example: true
        chronicDiseaseType:
          maxLength: 500
          type: string
          description: >-
            Если предыдущее поле true, тогда в этом поле описание какие
            хронические заболевания есть
          example: пиелонефрит
        heatDate:
          type: string
          description: >-
            Предполагаемая дата очередной течки (для сук)(в формате
            "dd.MM.yyyy"), должна быть в будущем
          example: 09.06.2023
        vetData:
          maxLength: 500
          type: string
          description: >-
            Контакты ветврача, к которому следует обращаться в случае
            необходимости
          example: 89000000000 Иван Иваныч Иванов
        stayWithoutMaster:
          maxLength: 500
          type: string
          description: Есть ли опыт разлуки с хозяином?
          example: Да, разлучается спокойно
        stayAlone:
          maxLength: 250
          type: string
          description: Умеет ли питомец спокойно оставаться один?
          example: нет, воет, когда остаётся один
        specialCare:
          maxLength: 500
          type: string
          description: Требуется ли спец уход, какой?
          example: да, нужно расчёсывать шерсть два раза в день
        barkHowl:
          maxLength: 250
          type: string
          description: Лает / воет в одиночестве?
          example: да
        furnitureDamage:
          maxLength: 250
          type: string
          description: Портит ли вещи, мебель?
          example: нет
        foodFromTable:
          maxLength: 250
          type: string
          description: Ворует ли еду со стола?
          example: нет
        defecateAtHome:
          maxLength: 250
          type: string
          description: Справляет ли  нужду дома?
          example: нет
        markAtHome:
          maxLength: 250
          type: string
          description: Метит дома?
          example: нет
        newPeople:
          maxLength: 500
          type: string
          description: Как относится к незнакомым людям?
          example: дружелюбно
        isBitePeople:
          type: boolean
          description: Ваша собака когда-нибудь кого-нибудь кусала?
          example: true
        reasonOfBite:
          maxLength: 250
          type: string
          description: Если предыдущее поле true, тогда в этом поле причина укуса
          example: Дразнил
        playWithDogs:
          maxLength: 500
          type: string
          description: Играет / гуляет с другими собаками?
          example: да
        isDogTraining:
          type: boolean
          description: Прошел ли питомец курс послушания?
          example: true
        trainingName:
          maxLength: 500
          type: string
          description: >-
            Если предыдущее поле true, тогда в этом поле название курс
            послушания
          example: Послушная собака
        like:
          maxLength: 500
          type: string
          description: Что любит
          example: Когда гладят по голове
        notLike:
          maxLength: 500
          type: string
          description: Что не любит
          example: Когда трогают хвост
        toys:
          maxLength: 500
          type: string
          description: Любимые игрушки, игры питомца
          example: Мячик
        badHabit:
          maxLength: 250
          type: string
          description: Вредные привычки
          example: Разбрасывает еду из миски
        walking:
          maxLength: 250
          type: string
          description: Сколько раз в день питомец привык гулять?/гуляет ли на улице
          example: три раза
        morningWalking:
          maxLength: 150
          type: string
          description: Привычное время прогулок Утро
          example: 6 утра
        dayWalking:
          maxLength: 150
          type: string
          description: Привычное время прогулок День
          example: В 2 часа дня
        eveningWalking:
          maxLength: 150
          type: string
          description: Привычное время прогулок Вечер
          example: В 8 часов вечера
        feedingQuantity:
          type: integer
          description: Количество кормлений в день (От 1 до 9)
          format: int32
          example: 7
        feedType:
          maxLength: 250
          type: string
          description: Вид корма (сухой / натуралка/консервы)
          example: сухой корм
        feedName:
          maxLength: 250
          type: string
          description: Название корма/консерв
          example: Довольный пёс
        feedComposition:
          maxLength: 250
          type: string
          description: Состав корма/консерв
          example: говядина и овощи
        feedingRate:
          maxLength: 250
          type: string
          description: Норма на 1 кормление
          example: 100 г
        feedingPractice:
          maxLength: 500
          type: string
          description: Особенности кормления
          example: без особенностей
        treat:
          maxLength: 250
          type: string
          description: Разрешенные лакомства и их количество
          example: сахар
        isMedicine:
          type: boolean
          description: Необходимы ли лекарства, витамины?
          example: true
        medicineRegimen:
          maxLength: 500
          type: string
          description: >-
            Если предыдущее поле true, тогда в этом поле название, режим приема
            лекарств/витаминов и доза
          example: Здоровая собака
        additionalData:
          maxLength: 1000
          type: string
          description: Дополнительные комментарии, особенности поведения
          example: Любит, чтоб чесали животик
        registrationDate:
          type: string
          description: Дата регистрации в ПО гостиницы (в формате "dd.MM.yyyy"), должна быть в прошлом
          example: 09.12.2023


    Error:
      title: Error
      description: Сведения об ошибке
      type: object
      properties:
        httpStatus:
          type: string
          description: Код статуса HTTP-ответа
          example: CONFLICT
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED

        message:
          type: string
          description: Сообщение об ошибке
          example: "validation email size error"

        reason:
          type: string
          description: Общее описание причины ошибки
          example: Request parameters validation error

        timestamp:
          type: string
          description: Дата и время когда произошла ошибка (в формате \"yyyy-MM-dd HH:mm:ss\")
          example: 2022-06-09 06:27:23

        errors:
          type: array
          description: Список стектрейсов или описания ошибок
          example: "[]"
          items:
            type: string
            description: Cтектрейс или описание ошибок
            example: "[]"